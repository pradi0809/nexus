version: '3.8'

services:
  postgresql:
    image: postgres:15-alpine
    container_name: nexus-postgres
    environment:
      POSTGRES_DB: nexus
      POSTGRES_USER: nexus
      POSTGRES_PASSWORD: nexus_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - nexus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexus -d nexus"]
      interval: 30s
      timeout: 10s
      retries: 3

  nexus:
    image: sonatype/nexus3:latest
    container_name: nexus3
    environment:
      - NEXUS_SECURITY_RANDOMPASSWORD=false
      - NEXUS_SECURITY_INITIAL_PASSWORD=passw0rd
      - INSTALL4J_ADD_VM_PARAMS=-Xms2g -Xmx2g -XX:MaxDirectMemorySize=3g -Djava.util.prefs.userRoot=/nexus-data/javaprefs
    volumes:
      - nexus_data:/nexus-data
        ./nexus.properties:/nexus-data/etc/nexus.properties
    networks:
      - nexus-network
    restart: unless-stopped
    depends_on:
      postgresql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/service/rest/v1/status"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 180s

  nginx:
    image: nginx:alpine
    container_name: nexus-nginx
    ports:
      - "80:80"
      - "443:443"
      - "8082:8082"  # Docker registry port
      - "8083:8083"  # Docker registry port (if using multiple registries)
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - nexus-network
    restart: unless-stopped
    depends_on:
      - nexus
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  nexus-network:
    driver: bridge

volumes:
  nexus_data:
    driver: local
  postgres_data:
    driver: local