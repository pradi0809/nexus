1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "nexus.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "nexus.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "nexus.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "nexus.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

{{- if .Values.dockerRegistry.enabled }}
2. To use the Docker registry:
{{- if .Values.dockerRegistry.ingress.enabled }}
   Docker registry URL: {{ (index .Values.dockerRegistry.ingress.hosts 0).host }}
{{- else }}
   kubectl port-forward svc/{{ include "nexus.fullname" . }} {{ .Values.dockerRegistry.port }}:{{ .Values.dockerRegistry.port }}
   Docker registry URL: localhost:{{ .Values.dockerRegistry.port }}
{{- end }}
{{- end }}

3. Default admin credentials:
   Username: admin
   Password: {{ .Values.nexus.adminPassword }}

NOTES:
1. Aurora PostgreSQL database must be created separately using AWS services (RDS).
2. Create a Kubernetes secret with the database credentials before deploying this chart:
   kubectl create secret generic {{ .Values.database.aurora.existingSecret }} \
     --from-literal=host=<AURORA_ENDPOINT> \
     --from-literal=username={{ .Values.database.aurora.username }} \
     --from-literal=password=<DB_PASSWORD>
3. Make sure the EKS cluster has the AWS Load Balancer Controller installed for ALB support.