events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 1G;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript
               application/javascript application/xml+rss application/json;

    # SSL configuration (uncomment if using HTTPS)
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    # ssl_prefer_server_ciphers off;

    # Nexus Repository Manager
    upstream nexus {
        server nexus:8081;
    }

    # Main Nexus web interface
    server {
        listen 80;
        server_name nexus.local localhost;

        # Uncomment for HTTPS redirect
        # return 301 https://$server_name$request_uri;

        location / {
            proxy_pass http://nexus;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
            send_timeout 300;
        }
    }

    # HTTPS server (uncomment if using SSL)
    # server {
    #     listen 443 ssl http2;
    #     server_name nexus.local localhost;
    #
    #     ssl_certificate /etc/nginx/ssl/nexus.crt;
    #     ssl_certificate_key /etc/nginx/ssl/nexus.key;
    #
    #     location / {
    #         proxy_pass http://nexus;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_connect_timeout 300;
    #         proxy_send_timeout 300;
    #         proxy_read_timeout 300;
    #         send_timeout 300;
    #     }
    # }

    # Docker Registry (hosted repository)
    server {
        listen 8082;
        server_name nexus.local localhost;

        location / {
            proxy_pass http://nexus;
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
            send_timeout 300;

            # Docker specific headers
            proxy_set_header Docker-Distribution-Api-Version registry/2.0;
        }
    }

    # Additional Docker Registry (if needed)
    server {
        listen 8083;
        server_name nexus.local localhost;

        location / {
            proxy_pass http://nexus;
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
            send_timeout 300;

            # Docker specific headers
            proxy_set_header Docker-Distribution-Api-Version registry/2.0;
        }
    }
}